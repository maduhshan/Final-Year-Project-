package com.debuggers.charts;

import org.jfree.chart.ChartPanel;

import java.io.File;
import java.io.IOException;

import java.util.Iterator;
import java.util.TreeMap;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.ui.ApplicationFrame;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.ChartUtilities; 

public class LineChart_AWT extends ApplicationFrame
{
   /**
	 * 
	 */
   private static final long serialVersionUID = 1L;
   private TreeMap<Integer, Integer> table;

   public LineChart_AWT( String applicationTitle , String chartTitle,TreeMap<Integer, Integer> fitness, String algorithm) throws IOException
   {
      super(applicationTitle);
   
      if(algorithm.intern().equals("Generic Algorithm")){
    	  table=fitness;
          JFreeChart lineChart = ChartFactory.createLineChart(
             chartTitle,
             "Generation Number","Fitness of the fittest solution",
             createDataset(algorithm),
             PlotOrientation.VERTICAL,
             true,true,false);
          ChartPanel chartPanel = new ChartPanel( lineChart );
          chartPanel.setPreferredSize( new java.awt.Dimension( 1250 , 750 ) );
          setContentPane( chartPanel );
          saveToPng(lineChart,algorithm);
      }else{
    	  table=fitness;
          JFreeChart lineChart = ChartFactory.createLineChart(
             chartTitle,
             "Execution Number","Engery of the best solution",
             createDataset(algorithm),
             PlotOrientation.VERTICAL,
             true,true,false);
          ChartPanel chartPanel = new ChartPanel( lineChart );
          chartPanel.setPreferredSize( new java.awt.Dimension( 1250 , 750 ) );
          setContentPane( chartPanel );
          saveToPng(lineChart,algorithm);
      }
   }
	/**
	 * Create a dataset for the line Chart
	 */
   private DefaultCategoryDataset createDataset(String algorithm )
   {
      DefaultCategoryDataset dataset = new DefaultCategoryDataset( );
      Iterator<Integer> it = table.keySet().iterator();
     
      while (it.hasNext()){
     	 Integer generationNo = it.next();
     	if(algorithm.intern().equals("Generic Algorithm")){
     		dataset.addValue( table.get(generationNo), "fitness" , generationNo );   
     	}else{
     		dataset.addValue( table.get(generationNo), "Engery" , generationNo );   
     	}
      }
      return dataset;
   }
	/**
	 * Save a local copy for the image as png image
	 * @param algorithm 
	 */
   private void saveToPng(JFreeChart lineChartObject, String algorithm) throws IOException{
	      int width = 640; /* Width of the image */
	      int height = 480; /* Height of the image */ 
	      File lineChart = new File( "charts//Line Chart generated by "+algorithm+".jpeg" ); 
	      ChartUtilities.saveChartAsJPEG(lineChart ,lineChartObject, width ,height);
   }

}
