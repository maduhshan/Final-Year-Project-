package com.debuggers.charts;

import java.io.File;
import java.io.IOException;
import java.util.Iterator;
import java.util.TreeMap;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.ui.ApplicationFrame;


public class BarChart_AWT extends ApplicationFrame {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
	 *Constructor for BarChart 
	 * @param algorithm 
	 */
	public BarChart_AWT(String applicationTitle, String chartTitle,
			TreeMap<Integer, Integer> totalCountForEachPreferences, String algorithm) {
		super(applicationTitle);
		JFreeChart barChart = ChartFactory.createBarChart(chartTitle, "Preferences", "No of Students",
				createDataset(totalCountForEachPreferences), PlotOrientation.VERTICAL, true, true, false);

		ChartPanel chartPanel = new ChartPanel(barChart);
		chartPanel.setPreferredSize(new java.awt.Dimension(560, 367));
		setContentPane(chartPanel);

		SaveTheImage(barChart,algorithm);
	}
	/**
	 * Save a local copy for the image 
	 * @param algorithm 
	 */
	private void SaveTheImage(JFreeChart barChart2, String algorithm) {
		int width = 640; /* Width of the image */
		int height = 480; /* Height of the image */
		File BarChart = new File("charts//BarChart Generated by"+algorithm+".jpeg");
		try {
			ChartUtilities.saveChartAsJPEG(BarChart, barChart2, width, height);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}	
	
	/**
	 * Create A dataset
	 */
	private CategoryDataset createDataset(TreeMap<Integer, Integer> totalCountForEachPreferences) {

		final DefaultCategoryDataset dataset = new DefaultCategoryDataset();

		Iterator<Integer> it = totalCountForEachPreferences.keySet().iterator();

		while (it.hasNext()) {
			Integer rank = it.next();
			if (rank == 10) {
				dataset.addValue(totalCountForEachPreferences.get(rank), "Not Prefered ","preference");
			} else {
				dataset.addValue(totalCountForEachPreferences.get(rank), "Preference " + ++rank, "preference");
			}

		}
		return dataset;
	}

}